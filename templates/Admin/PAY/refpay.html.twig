{% include 'RawTemplate/_hearder.w.jsgrid.html.twig' %}

{% if result_ref_pay is defined and result_ref_pay is not null %}
  <script>
    //let dataTagToJson = '<%= @resultSet.map{|o| Hash[o.each_pair.to_a] }.to_json %>';

    let dataREFPAYToJsonArray =JSON.parse('{{ result_ref_pay | json_encode | raw }}');
    // dataTagToJson = dataTagToJson.replace(/&quot;/g,"\"");
    // let dataTagToJsonArray = JSON.parse(dataTagToJson);

    // Create our number formatter.
    const formatterCurrency = new Intl.NumberFormat('fr-FR', {
      style: 'currency',
      currency: 'MGA'

      // These options are needed to round to whole numbers if that's what you want.
      //minimumFractionDigits: 0, // (this suffices for whole numbers, but will print 2500.10 as $2,500.1)
      //maximumFractionDigits: 0, // (causes 2500.99 to be printed as $2,501)
    });
    const formatterDateFR = new Intl.DateTimeFormat('fr-FR');

  </script>
{% else %}
    // Error
    <script>
      let dataREFPAYToJsonArray = "";
    </script>
{% endif %}
<div id="mg-graph-identifier">ref-pay</div>




<div class="row">
  <div class="col-1">
  </div>
  <div class="col-10">
    <h2>Frais de scolarit√©</h2>
    <hr>
  </div>
  <div class="col-1">
  </div>
</div>

<div class="row">
  <div class="col-3">
  </div>
  <div class="col-6">
    <div id="jsGridRefPay">
    </div>
  </div>
  <div class="col-3">
  </div>
</div>

{% include 'RawTemplate/SPE/_footerpay.w.jsgrid.html.twig' %}
